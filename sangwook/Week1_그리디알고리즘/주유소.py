# 어떤 나라에 N개의 도시가 있다. 이 도시들은 일직선 도로 위에 있다. 편의상 일직선을 수평 방향으로 두자.
# 제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동하려고 한다. 인접한 두 도시 사이의 도로들은 서로 길이가 다를 수 있다. 도로 길이의 단위는 km를 사용한다.
# 처음 출발할 때 자동차에는 기름이 없어서 주유소에서 기름을 넣고 출발하여야 한다. 기름통의 크기는 무제한이어서 얼마든지 많은 기름을 넣을 수 있다.
# 도로를 이용하여 이동할 때 1km마다 1리터의 기름을 사용한다. 각 도시에는 단 하나의 주유소가 있으며, 도시 마다 주유소의 리터당 가격은 다를 수 있다. 가격의 단위는 원을 사용한다.
# 각 도시에 있는 주유소의 기름 가격과, 각 도시를 연결하는 도로의 길이를 입력으로 받아 제일 왼쪽 도시에서 제일 오른쪽 도시로 이동하는 최소의 비용을 계산하는 프로그램을 작성하시오.


n = int(input())
city_len = list(map(int, input().split()))
gas_fee = list(map(int, input().split()))
# 처음 도시의 가격을 최솟값으로 정한다.
minPrice = gas_fee[0]
result = 0
# 가는 동안 다음 마을의 가격과 현재 마을의 가격을 계속 비교하며,
# 낮은 값과 거리의 곱을 계속 결과에 더해 주면 된다.
for i in range(len(city_len)):
    minPrice = min(minPrice, gas_fee[i])
    result += minPrice * city_len[i]

print(result)